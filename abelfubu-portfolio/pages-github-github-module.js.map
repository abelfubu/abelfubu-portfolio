{"version":3,"sources":["./src/app/pages/github/services/github.service.ts","./src/app/pages/github/github-routing.module.ts","./src/app/pages/github/github.component.ts","./src/app/pages/github/github.component.html","./src/app/pages/github/github.module.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAA4C;;;AAMrC,MAAM,aAAa;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,WAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,6CAA6C,CAAC,CAAC,IAAI,CAAC,kEAAW,EAAE,CAAC;IAE1D,CAAC;;0EAH7B,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACF;;;AAErD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe,EAAE,CAAC,CAAC;AAM3D,MAAM,mBAAmB;;sFAAnB,mBAAmB;kGAAnB,mBAAmB;sGAHrB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,mBAAmB,uFAFpB,4DAAY;;;;;;;;;;;;;ACNxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;ICDlC,yEAA6C;IAC3C,oEAAG;IAAA,uDAAoE;;IAAA,4DAAI;IAC7E,4DAAM;;;IADD,0DAAoE;IAApE,2MAAoE;;;IAF3E,wEAA8C;IAC5C,0HAEM;IACR,qEAAe;;;IAHsB,0DAAQ;IAAR,6EAAQ;;ADUtC,MAAM,eAAe;IAE1B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QADhD,WAAM,GAAuB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEpD,QAAQ,KAAU,CAAC;;8EAJR,eAAe;+FAAf,eAAe;QCX5B,6HAIe;;;QAJA,6IAAqB;;;;;;;;;;;;;;ACCpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACe;AACT;;AAM7C,MAAM,YAAY;;wEAAZ,YAAY;2FAAZ,YAAY;+FAFd,CAAC,4DAAY,EAAE,0EAAmB,CAAC;mIAEjC,YAAY,mBAHR,iEAAe,aACpB,4DAAY,EAAE,0EAAmB","file":"pages-github-github-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { shareReplay } from 'rxjs/operators'\nimport { Repo } from '../models'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GithubService {\n  repos$ = this.http.get<Repo[]>('https://api.github.com/users/abelfubu/repos').pipe(shareReplay())\n\n  constructor(private http: HttpClient) {}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GithubComponent } from './github.component';\n\nconst routes: Routes = [{ path: '', component: GithubComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GithubRoutingModule { }\n","import { Component, OnInit } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { Repo } from './models'\nimport { GithubService } from './services/github.service'\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.scss'],\n})\nexport class GithubComponent implements OnInit {\n  repos$: Observable<Repo[]> = this.githubService.repos$.pipe(tap(console.log))\n  constructor(private githubService: GithubService) {}\n\n  ngOnInit(): void {}\n}\n","<ng-container *ngIf=\"repos$ | async as repos\">\n  <div class=\"card\" *ngFor=\"let repo of repos\">\n    <p>{{ repo.name }} - {{ repo.updated_at | date }} - {{ repo.language }}</p>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { GithubRoutingModule } from './github-routing.module'\nimport { GithubComponent } from './github.component'\n\n@NgModule({\n  declarations: [GithubComponent],\n  imports: [CommonModule, GithubRoutingModule],\n})\nexport class GithubModule {}\n"],"sourceRoot":"webpack:///"}